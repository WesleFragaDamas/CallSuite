# Generated by Django 5.2.1 on 2025-06-20 01:21

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='IntervaloProgramado',
            fields=[
                ('hora_inicio', models.TimeField(primary_key=True, serialize=False, unique=True, verbose_name='Hora de Início do Intervalo')),
            ],
            options={
                'verbose_name': 'Intervalo Programado (30 min)',
                'verbose_name_plural': 'Intervalos Programados (30 min)',
                'ordering': ['hora_inicio'],
            },
        ),
        migrations.CreateModel(
            name='CenarioDimensionamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_cenario', models.CharField(max_length=150, verbose_name='Nome do Cenário')),
                ('tipo_dimensionamento', models.CharField(choices=[('RECEPTIVO', 'Receptivo'), ('ATIVO', 'Ativo'), ('CHAT', 'Chat')], default='RECEPTIVO', max_length=15, verbose_name='Tipo')),
                ('data_referencia', models.DateField(default=django.utils.timezone.now, verbose_name='Data de Referência')),
                ('tma_segundos', models.PositiveIntegerField(default=180, help_text='Tempo Médio de Atendimento.', verbose_name='TMA (s)')),
                ('nivel_servico_percentual_meta', models.FloatField(default=0.8, help_text='Ex: 0.80 para 80%', validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(1.0)], verbose_name='NS Meta (%)')),
                ('nivel_servico_tempo_meta_segundos', models.PositiveIntegerField(default=20, help_text='Ex: 20 para atender em até 20s.', verbose_name='NS Tempo Meta (s)')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_modificacao', models.DateTimeField(auto_now=True)),
                ('usuario_criador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cenarios_dimensionamento', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cenário de Dimensionamento',
                'verbose_name_plural': 'Cenários',
                'ordering': ['-data_modificacao'],
            },
        ),
        migrations.CreateModel(
            name='TurnoPlanejado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hora_inicio_turno', models.TimeField(verbose_name='Início do Turno')),
                ('hora_fim_turno', models.TimeField(verbose_name='Fim do Turno')),
                ('numero_agentes_neste_turno', models.PositiveIntegerField(default=1, verbose_name='Nº de Agentes Neste Turno')),
                ('cenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='turnos_planejados', to='dimensionamento.cenariodimensionamento')),
            ],
            options={
                'verbose_name': 'Turno Planejado',
                'verbose_name_plural': 'Turnos Planejados',
                'ordering': ['cenario', 'hora_inicio_turno'],
            },
        ),
        migrations.CreateModel(
            name='ComponenteShrinkage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_componente', models.CharField(max_length=100, verbose_name='Nome do Componente')),
                ('percentual', models.FloatField(help_text='Ex: 10 para 10%.', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Percentual (%)')),
                ('cenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='componentes_shrinkage', to='dimensionamento.cenariodimensionamento')),
            ],
            options={
                'verbose_name': 'Componente de Shrinkage',
                'verbose_name_plural': 'Componentes de Shrinkage',
                'unique_together': {('cenario', 'nome_componente')},
            },
        ),
        migrations.CreateModel(
            name='VolumePorIntervalo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volume_chamadas', models.PositiveIntegerField(default=0, verbose_name='Volume Estimado')),
                ('cenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volumes_intervalo', to='dimensionamento.cenariodimensionamento')),
                ('intervalo_programado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dimensionamento.intervaloprogramado', verbose_name='Intervalo')),
            ],
            options={
                'verbose_name': 'Volume por Intervalo',
                'verbose_name_plural': 'Volumes por Intervalo',
                'ordering': ['intervalo_programado__hora_inicio'],
                'unique_together': {('cenario', 'intervalo_programado')},
            },
        ),
    ]
